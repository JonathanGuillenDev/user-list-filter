{"remainingRequest":"/Users/Jonathan/Desktop/Java/module-3/12_Vue_Event_Handling/exercise-student/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/Jonathan/Desktop/Java/module-3/12_Vue_Event_Handling/exercise-student/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Jonathan/Desktop/Java/module-3/12_Vue_Event_Handling/exercise-student/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Jonathan/Desktop/Java/module-3/12_Vue_Event_Handling/exercise-student/src/components/UserList.vue?vue&type=template&id=4a3fa6b9&scoped=true&","dependencies":[{"path":"/Users/Jonathan/Desktop/Java/module-3/12_Vue_Event_Handling/exercise-student/src/components/UserList.vue","mtime":1617676642000},{"path":"/Users/Jonathan/Desktop/Java/module-3/12_Vue_Event_Handling/exercise-student/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jonathan/Desktop/Java/module-3/12_Vue_Event_Handling/exercise-student/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Jonathan/Desktop/Java/module-3/12_Vue_Event_Handling/exercise-student/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Jonathan/Desktop/Java/module-3/12_Vue_Event_Handling/exercise-student/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}